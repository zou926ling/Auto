{
  "uid" : "1705b4aaad1166ba",
  "name" : "已关联商机的客户，无法删除",
  "fullName" : "run#test_run",
  "historyId" : "8cd8813a61b99215c55e9e4613d9e5c2",
  "time" : {
    "start" : 1652325212057,
    "stop" : 1652325212252,
    "duration" : 195
  },
  "status" : "failed",
  "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n3 Failed Assumptions:\n\nrun.py:120: AssumptionFailure\n>>\tpytest.assume(actual_res==expect_res,f'期望是{expect_res},实际是{actual_res}')\nAssertionError: 期望是0,实际是500\nassert False\n\nrun.py:120: AssumptionFailure\n>>\tpytest.assume(actual_res==expect_res,f'期望是{expect_res},实际是{actual_res}')\nAssertionError: 期望是500,实际是0\nassert False\n\nrun.py:120: AssumptionFailure\n>>\tpytest.assume(actual_res==expect_res,f'期望是{expect_res},实际是{actual_res}')\nAssertionError: 期望是该条数据与其他数据有必要关联，请勿删除,实际是False\nassert False",
  "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               3 Failed Assumptions:\nE               \nE               run.py:120: AssumptionFailure\nE               >>\tpytest.assume(actual_res==expect_res,f'期望是{expect_res},实际是{actual_res}')\nE               AssertionError: 期望是0,实际是500\nE               assert False\nE               \nE               run.py:120: AssumptionFailure\nE               >>\tpytest.assume(actual_res==expect_res,f'期望是{expect_res},实际是{actual_res}')\nE               AssertionError: 期望是500,实际是0\nE               assert False\nE               \nE               run.py:120: AssumptionFailure\nE               >>\tpytest.assume(actual_res==expect_res,f'期望是{expect_res},实际是{actual_res}')\nE               AssertionError: 期望是该条数据与其他数据有必要关联，请勿删除,实际是False\nE               assert False\n\nD:\\Programs\\Python\\python310\\lib\\site-packages\\six.py:718: FailedAssumption",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1652325210334,
      "stop" : 1652325210429,
      "duration" : 95
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n3 Failed Assumptions:\n\nrun.py:120: AssumptionFailure\n>>\tpytest.assume(actual_res==expect_res,f'期望是{expect_res},实际是{actual_res}')\nAssertionError: 期望是0,实际是500\nassert False\n\nrun.py:120: AssumptionFailure\n>>\tpytest.assume(actual_res==expect_res,f'期望是{expect_res},实际是{actual_res}')\nAssertionError: 期望是500,实际是0\nassert False\n\nrun.py:120: AssumptionFailure\n>>\tpytest.assume(actual_res==expect_res,f'期望是{expect_res},实际是{actual_res}')\nAssertionError: 期望是该条数据与其他数据有必要关联，请勿删除,实际是False\nassert False",
    "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               3 Failed Assumptions:\nE               \nE               run.py:120: AssumptionFailure\nE               >>\tpytest.assume(actual_res==expect_res,f'期望是{expect_res},实际是{actual_res}')\nE               AssertionError: 期望是0,实际是500\nE               assert False\nE               \nE               run.py:120: AssumptionFailure\nE               >>\tpytest.assume(actual_res==expect_res,f'期望是{expect_res},实际是{actual_res}')\nE               AssertionError: 期望是500,实际是0\nE               assert False\nE               \nE               run.py:120: AssumptionFailure\nE               >>\tpytest.assume(actual_res==expect_res,f'期望是{expect_res},实际是{actual_res}')\nE               AssertionError: 期望是该条数据与其他数据有必要关联，请勿删除,实际是False\nE               assert False\n\nD:\\Programs\\Python\\python310\\lib\\site-packages\\six.py:718: FailedAssumption",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2239095a521967da",
      "name" : "log",
      "source" : "2239095a521967da.txt",
      "type" : "text/plain",
      "size" : 2865
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "删除客户接口测试集合"
  }, {
    "name" : "suite",
    "value" : "run"
  }, {
    "name" : "host",
    "value" : "LAPTOP-93HH27QA"
  }, {
    "name" : "thread",
    "value" : "17100-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "run"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case_info_list",
    "value" : "[['新增客户', '${host}/CrmCustomer/addOrUpdate', 'post', '{\\n\"Admin-Token\":\"${token}\"\\n}', '{\\n\"json\":{\\n\"$.entity.customer_name\":\"沙陌${timestamp}\",\\n}\\n}', '{\\n\"customerId\":\"$.data.customerId\"\\n}', 200, '[\\n{\\n\"actual\":\"$.code\",\\n\"expect\":0\\n},\\n{\\n\"actual\":\"$.data.customerName\",\\n\"expect\":\"沙陌${timestamp}\"\\n},\\n\\n]'], ['新建商机', '${host}/CrmBusiness/addOrUpdate', 'post', '{\\n\"Admin-Token\":\"${token}\"\\n}', '', '', 200, '[\\n{\\n\"actual\":\"$.code\",\\n\"expect\":0\\n}\\n]'], ['删除客户', '${host}/CrmCustomer/deleteByIds', 'post', '{\\n\"Admin-Token\":\"${token}\"\\n}', '{\\n\"data\":{\\n\"$.customerIds\":\"${customerId}\"\\n}\\n}', '', 200, '[\\n{\\n\"actual\":\"$.code\",\\n\"expect\":500\\n},\\n{\\n\"actual\":\"$.msg\",\\n\"expect\":\"该条数据与其他数据有必要关联，请勿删除\"\\n},\\n]']]"
  }, {
    "name" : "case_name",
    "value" : "'已关联商机的客户，无法删除'"
  }, {
    "name" : "suite_name",
    "value" : "'删除客户接口测试集合'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "1705b4aaad1166ba.json",
  "parameterValues" : [ "[['新增客户', '${host}/CrmCustomer/addOrUpdate', 'post', '{\\n\"Admin-Token\":\"${token}\"\\n}', '{\\n\"json\":{\\n\"$.entity.customer_name\":\"沙陌${timestamp}\",\\n}\\n}', '{\\n\"customerId\":\"$.data.customerId\"\\n}', 200, '[\\n{\\n\"actual\":\"$.code\",\\n\"expect\":0\\n},\\n{\\n\"actual\":\"$.data.customerName\",\\n\"expect\":\"沙陌${timestamp}\"\\n},\\n\\n]'], ['新建商机', '${host}/CrmBusiness/addOrUpdate', 'post', '{\\n\"Admin-Token\":\"${token}\"\\n}', '', '', 200, '[\\n{\\n\"actual\":\"$.code\",\\n\"expect\":0\\n}\\n]'], ['删除客户', '${host}/CrmCustomer/deleteByIds', 'post', '{\\n\"Admin-Token\":\"${token}\"\\n}', '{\\n\"data\":{\\n\"$.customerIds\":\"${customerId}\"\\n}\\n}', '', 200, '[\\n{\\n\"actual\":\"$.code\",\\n\"expect\":500\\n},\\n{\\n\"actual\":\"$.msg\",\\n\"expect\":\"该条数据与其他数据有必要关联，请勿删除\"\\n},\\n]']]", "'已关联商机的客户，无法删除'", "'删除客户接口测试集合'" ]
}